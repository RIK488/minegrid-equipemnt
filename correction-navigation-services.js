// =====================================================
// SCRIPT : CORRECTION NAVIGATION SERVICES COMMUNS
// =====================================================
// Ce script corrige la navigation des services communs

console.log('üîß Correction de la navigation des services communs...');

// 1. V√©rifier les liens actuels
const serviceLinks = [
  '/#vitrine',                // Vitrine personnalis√©e
  '/#publication',            // Publication rapide
  '/#devis',                  // G√©n√©rateur de devis PDF
  '/#documents',              // Espace documents
  '/#messages',               // Bo√Æte de r√©ception
  '/#dashboard-entreprise-display', // Tableau de bord
  '/#planning',               // Planning pro
  '/#assistant-ia',           // Assistant IA
];

console.log('üìã Liens des services communs:');
serviceLinks.forEach((link, idx) => {
  console.log(`   ${idx + 1}. ${link}`);
});

// 2. Fonction pour rediriger vers le tableau de bord sauvegard√©
function redirectToSavedDashboard() {
  console.log('üîÑ Redirection vers le tableau de bord sauvegard√©...');
  
  // V√©rifier si une configuration sauvegard√©e existe
  const savedConfig = localStorage.getItem('enterpriseDashboardConfig_vendeur');
  if (savedConfig) {
    console.log('‚úÖ Configuration sauvegard√©e trouv√©e');
    window.location.hash = '#dashboard-entreprise-display';
  } else {
    console.log('‚ö†Ô∏è Aucune configuration sauvegard√©e trouv√©e');
    window.location.hash = '#dashboard-entreprise-display';
  }
}

// 3. Fonction pour g√©rer les clics sur les services communs
function handleServiceClick(serviceIndex) {
  const serviceName = [
    'Vitrine personnalis√©e',
    'Publication rapide', 
    'G√©n√©rateur de devis PDF',
    'Espace documents',
    'Bo√Æte de r√©ception',
    'Tableau de bord',
    'Planning pro',
    'Assistant IA'
  ][serviceIndex];
  
  console.log(`üñ±Ô∏è Clic sur: ${serviceName}`);
  
  // Si c'est le tableau de bord, rediriger vers la version sauvegard√©e
  if (serviceIndex === 5) { // Tableau de bord
    redirectToSavedDashboard();
  } else {
    // Pour les autres services, utiliser le lien normal
    const link = serviceLinks[serviceIndex];
    console.log(`üîó Navigation vers: ${link}`);
    window.location.hash = link.replace('/#', '');
  }
}

// 4. Instructions pour l'utilisateur
console.log('\nüìù Instructions de test:');
console.log('1. Cliquez sur "Tableau de bord" ‚Üí Doit ramener au dashboard sauvegard√©');
console.log('2. Cliquez sur les autres services ‚Üí Doit naviguer vers les pages correspondantes');
console.log('3. V√©rifiez que la configuration est restaur√©e apr√®s navigation');

// 5. Test de la configuration sauvegard√©e
const savedConfig = localStorage.getItem('enterpriseDashboardConfig_vendeur');
if (savedConfig) {
  try {
    const parsed = JSON.parse(savedConfig);
    console.log('\nüíæ Configuration sauvegard√©e:');
    console.log(`   - Widgets: ${parsed.widgets?.length || 0}`);
    console.log(`   - Layout: ${parsed.layout?.lg?.length || 0}`);
    console.log(`   - Derni√®re sauvegarde: ${parsed.lastSaved || 'Non d√©finie'}`);
  } catch (error) {
    console.error('‚ùå Erreur lors du parsing de la configuration:', error);
  }
} else {
  console.log('\n‚ö†Ô∏è Aucune configuration sauvegard√©e trouv√©e');
}

// =====================================================
// R√âSULTAT ATTENDU :
// - Services communs fonctionnels
// - Navigation correcte vers chaque page
// - Retour au dashboard sauvegard√© depuis "Tableau de bord"
// ===================================================== 