// Script de test pour le m√©tier M√©canicien
console.log('üîß Test de la configuration M√©canicien...');

// 1. V√©rifier les IDs dans DashboardConfigurator
console.log('üìã IDs M√©canicien dans DashboardConfigurator (CORRIG√âS):');
console.log([
  'interventions-today',    // ‚úÖ Corrig√©
  'repair-status',         // ‚úÖ Corrig√©
  'parts-inventory',       // ‚úÖ Corrig√©
  'technician-workload'    // ‚úÖ Corrig√©
]);

// 2. V√©rifier les IDs dans MecanicienWidgets.js
console.log('üìã IDs M√©canicien dans MecanicienWidgets.js:');
console.log([
  'interventions-today',
  'repair-status',
  'parts-inventory',
  'technician-workload'
]);

// 3. V√©rifier la configuration actuelle
const configMecanicien = localStorage.getItem('enterpriseDashboardConfig_mecanicien');

console.log('\nüîç Configuration M√©canicien:');
if (configMecanicien) {
  const parsed = JSON.parse(configMecanicien);
  console.log('‚úÖ Configuration charg√©e');
  console.log('üìä Widgets pr√©sents:', parsed.widgets?.map(w => w.id));
  console.log('üìç Layout:', parsed.layout?.lg?.map(l => ({ id: l.i, x: l.x, y: l.y, w: l.w, h: l.h })));
} else {
  console.log('‚ùå Aucune configuration trouv√©e');
}

// 4. V√©rifier le backup
const backupMecanicien = localStorage.getItem('enterpriseDashboardConfig_mecanicien_backup');
console.log('\nüíæ Backup M√©canicien:', backupMecanicien ? '‚úÖ Pr√©sent' : '‚ùå Absent');

// 5. Instructions de test
console.log(`
üéØ INSTRUCTIONS DE TEST POUR M√âCANICIEN:

1. TEST DE CONFIGURATION:
   - Allez sur la page de configuration
   - S√©lectionnez "M√©canicien / Atelier"
   - Passez √† l'√©tape 2 (Organisation des widgets)
   - V√©rifiez que les 4 widgets s'affichent correctement

2. TEST D'AFFICHAGE:
   - G√©n√©rez le tableau de bord
   - V√©rifiez que vous arrivez sur #dashboard-mecanicien-display
   - V√©rifiez que les widgets s'affichent avec du contenu

3. TEST DES FONCTIONNALIT√âS:
   - Testez l'ajout/suppression de widgets
   - Testez la restauration de position
   - Testez le redimensionnement

4. WIDGETS ATTENDUS:
   - interventions-today (chart)
   - repair-status (list)
   - parts-inventory (chart)
   - technician-workload (chart)

5. COMPARAISON AVEC AUTRES M√âTIERS:
   - Vendeur: 5 widgets
   - Loueur: 5 widgets
   - M√©canicien: 4 widgets ‚úÖ
`);

// 6. Fonction utilitaire pour nettoyer la configuration
function nettoyerConfigMecanicien() {
  console.log('üßπ Nettoyage de la configuration M√©canicien...');
  localStorage.removeItem('enterpriseDashboardConfig_mecanicien');
  localStorage.removeItem('enterpriseDashboardConfig_mecanicien_backup');
  console.log('‚úÖ Configuration M√©canicien nettoy√©e');
}

// 7. Fonction pour forcer la configuration
function forcerConfigMecanicien() {
  console.log('üîß For√ßage de la configuration M√©canicien...');
  const config = {
    metier: 'mecanicien',
    widgets: [
      { id: 'interventions-today', type: 'chart', title: 'Interventions du jour', enabled: true },
      { id: 'repair-status', type: 'list', title: '√âtat des r√©parations', enabled: true },
      { id: 'parts-inventory', type: 'chart', title: 'Stock pi√®ces d√©tach√©es', enabled: true },
      { id: 'technician-workload', type: 'chart', title: 'Charge de travail', enabled: true }
    ],
    layout: {
      lg: [
        { i: 'interventions-today', x: 0, y: 0, w: 6, h: 2 },
        { i: 'repair-status', x: 6, y: 0, w: 6, h: 2 },
        { i: 'parts-inventory', x: 0, y: 2, w: 6, h: 2 },
        { i: 'technician-workload', x: 6, y: 2, w: 6, h: 2 }
      ]
    },
    theme: 'light',
    refreshInterval: 30,
    notifications: true,
    createdAt: new Date().toISOString()
  };
  
  localStorage.setItem('enterpriseDashboardConfig_mecanicien', JSON.stringify(config));
  console.log('‚úÖ Configuration M√©canicien forc√©e');
}

console.log('‚úÖ Script de test M√©canicien termin√©.');
console.log('üí° Utilisez nettoyerConfigMecanicien() pour repartir de z√©ro');
console.log('üí° Utilisez forcerConfigMecanicien() pour forcer la configuration'); 